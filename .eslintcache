[{"F:\\MyProjects\\spark\\src\\App.js":"1","F:\\MyProjects\\spark\\src\\components\\Webcam.js":"2","F:\\MyProjects\\spark\\src\\index.js":"3","F:\\MyProjects\\spark\\src\\utilities\\Canvas.js":"4","F:\\MyProjects\\spark\\src\\components\\Home.js":"5","F:\\MyProjects\\spark\\src\\components\\Progress.js":"6","F:\\MyProjects\\spark\\src\\components\\Details.js":"7","F:\\MyProjects\\spark\\src\\config\\ApiConfig.js":"8","F:\\MyProjects\\spark\\src\\components\\Header.js":"9","F:\\MyProjects\\spark\\src\\components\\Controls.js":"10","F:\\MyProjects\\spark\\src\\utilities\\VideoConfig.js":"11","F:\\MyProjects\\spark\\src\\utilities\\Recognition.js":"12","F:\\MyProjects\\spark\\src\\utilities\\Timer.js":"13","F:\\MyProjects\\spark\\src\\utilities\\SaveEntry.js":"14"},{"size":150,"mtime":1612092564429,"results":"15","hashOfConfig":"16"},{"size":2434,"mtime":1612160952440,"results":"17","hashOfConfig":"16"},{"size":450,"mtime":1612162383234,"results":"18","hashOfConfig":"16"},{"size":269,"mtime":1610369941343,"results":"19","hashOfConfig":"16"},{"size":2417,"mtime":1612160915900,"results":"20","hashOfConfig":"16"},{"size":1423,"mtime":1612121711627,"results":"21","hashOfConfig":"16"},{"size":3956,"mtime":1612162010306,"results":"22","hashOfConfig":"16"},{"size":170,"mtime":1612124076837,"results":"23","hashOfConfig":"16"},{"size":550,"mtime":1612001738669,"results":"24","hashOfConfig":"16"},{"size":2823,"mtime":1612018394407,"results":"25","hashOfConfig":"16"},{"size":2314,"mtime":1612161282357,"results":"26","hashOfConfig":"16"},{"size":3322,"mtime":1612121686443,"results":"27","hashOfConfig":"16"},{"size":511,"mtime":1612125913466,"results":"28","hashOfConfig":"16"},{"size":493,"mtime":1612125833928,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16w31cv",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\MyProjects\\spark\\src\\App.js",[],"F:\\MyProjects\\spark\\src\\components\\Webcam.js",[],"F:\\MyProjects\\spark\\src\\index.js",[],"F:\\MyProjects\\spark\\src\\utilities\\Canvas.js",[],["61","62"],"F:\\MyProjects\\spark\\src\\components\\Home.js",["63"],"F:\\MyProjects\\spark\\src\\components\\Progress.js",[],"F:\\MyProjects\\spark\\src\\components\\Details.js",["64"],"import React, { useState, useEffect } from \"react\";\r\nimport { Drawer, Image, Divider, Button, AutoComplete } from \"antd\";\r\n\r\nimport { countdown, stopCountDown } from \"../utilities/Timer\";\r\nimport { retake } from \"../utilities/VideoConfig\";\r\nimport { SaveEntry } from \"../utilities/SaveEntry\";\r\n\r\nconst Details = ({\r\n  staff,\r\n  setStaff,\r\n  entry,\r\n  isDrawerOpen,\r\n  setIsDrawerOpen,\r\n  staffNameList,\r\n}) => {\r\n  const [options, setOptions] = useState();\r\n  const [count, setCount] = useState(5);\r\n  const [manualEntry, setManualEntry] = useState(false);\r\n\r\n  const searchOption = (value) => {\r\n    var opt = staffNameList.filter((staff) =>\r\n      staff[\"value\"].toLowerCase().includes(value)\r\n    );\r\n    setOptions(opt);\r\n  };\r\n\r\n  const handleInput = (value) => {\r\n    setStaff({\r\n      Name: value,\r\n      img:\r\n        \"https://cdn4.iconfinder.com/data/icons/business-square-gradient-shadow-2/512/xxx012-512.png\",\r\n    });\r\n  };\r\n\r\n  const enterManualy = () => {\r\n    stopCountDown();\r\n  };\r\n\r\n  const submitEntry = () => {\r\n    SaveEntry(staff, entry);\r\n    retake(\"normal\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (staff.Name !== \"Unknown\") {\r\n      countdown(setCount, staff, entry);\r\n    }\r\n  }, []);\r\n\r\n  return staff ? (\r\n    <Drawer\r\n      style={{ position: \"absolute\" }}\r\n      getContainer={false}\r\n      width={350}\r\n      mask={false}\r\n      placement=\"right\"\r\n      closable={false}\r\n      onClose={() => setIsDrawerOpen(false)}\r\n      visible={isDrawerOpen}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"c\",\r\n        }}\r\n      >\r\n        <Image width={75} height=\"auto\" src={staff.img} />\r\n        <div>\r\n          <h1>{staff.Name}</h1>\r\n\r\n          <div style={style.retake}>\r\n            {staff.Name !== \"Unknown\" ? (\r\n              <h2 style={{ margin: 10 }}>Not You?</h2>\r\n            ) : null}\r\n            <Button\r\n              block={staff.Name === \"Unknown\" ? true : false}\r\n              type=\"primary\"\r\n              size=\"large\"\r\n              danger\r\n              onClick={() => retake(\"error\")}\r\n            >\r\n              Retake\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Divider />\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        {manualEntry ? (\r\n          <>\r\n            <AutoComplete\r\n              size=\"large\"\r\n              style={{ width: \"70%\" }}\r\n              placeholder=\"Enter your name..\"\r\n              onSearch={searchOption}\r\n              onSelect={handleInput}\r\n              options={options}\r\n            />\r\n            <Button\r\n              onClick={() => submitEntry()}\r\n              style={{ width: \"25%\" }}\r\n              type=\"primary\"\r\n              size=\"large\"\r\n            >\r\n              Submit\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <Button\r\n            type=\"primary\"\r\n            size=\"large\"\r\n            block\r\n            onClick={() => [setManualEntry(true), enterManualy()]}\r\n          >\r\n            Enter Manually\r\n          </Button>\r\n        )}\r\n      </div>\r\n      <Divider style={{ margin: 15 }} />\r\n      {staff.Name !== \"Unknown\" ? (\r\n        <div style={{ textAlign: \"start\" }}>\r\n          <span\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <h2>Saving Entry in..</h2>\r\n\r\n            <h1 style={{ color: \"green\", fontSize: 42 }}>\r\n              <b>{count}</b>\r\n            </h1>\r\n          </span>\r\n        </div>\r\n      ) : null}\r\n    </Drawer>\r\n  ) : null;\r\n};\r\n\r\nconst style = {\r\n  retake: {\r\n    display: \"flex\",\r\n    justifyContent: \"start\",\r\n    alignItems: \"center\",\r\n  },\r\n  timerContainer: {\r\n    alignItems: \"center\",\r\n  },\r\n};\r\n\r\nexport default Details;\r\n","F:\\MyProjects\\spark\\src\\config\\ApiConfig.js",[],"F:\\MyProjects\\spark\\src\\components\\Header.js",["65"],"F:\\MyProjects\\spark\\src\\components\\Controls.js",[],"F:\\MyProjects\\spark\\src\\utilities\\VideoConfig.js",["66"],"import { clearVariable, Recognition } from \"./Recognition\";\r\nimport { stopCountDown } from \"./Timer\";\r\n\r\nvar loop = null;\r\n\r\nconst functions = {\r\n  isDrawerOpen: null,\r\n  progressValue: null,\r\n  staff: null,\r\n  status: null,\r\n};\r\n\r\nexport const startVideo = (\r\n  setIsVideoPlaying,\r\n  setIsDrawerOpen,\r\n  setProgressValue,\r\n  setStaff,\r\n  setStatus\r\n) => {\r\n  // function allocation\r\n  functions.isDrawerOpen = setIsDrawerOpen;\r\n  functions.progressValue = setProgressValue;\r\n  functions.staff = setStaff;\r\n  functions.status = setStatus;\r\n\r\n  setIsVideoPlaying(true);\r\n  setTimeout(() => {\r\n    const video = document.querySelector(\"video\");\r\n    // const canvas = document.querySelector(\"canvas\");\r\n\r\n    navigator.getUserMedia(\r\n      { video: {}, audio: false },\r\n      (stream) => ((video.srcObject = stream), video.play()),\r\n      (err) => console.log(err)\r\n    );\r\n    loop = Recognition(\r\n      video,\r\n      // canvas,\r\n      setIsDrawerOpen,\r\n      setProgressValue,\r\n      setStaff,\r\n      setStatus\r\n    );\r\n  }, 10);\r\n};\r\n\r\nexport const stopVideo = (\r\n  setIsVideoPlaying,\r\n  setIsDrawerOpen,\r\n  setProgressValue,\r\n  setEntry,\r\n  setStaff,\r\n  setStatus\r\n) => {\r\n  // function allocation\r\n\r\n  const video = document.querySelector(\"video\");\r\n  video.srcObject.getTracks().forEach((track) => {\r\n    track.stop();\r\n  });\r\n  clearVariable();\r\n  stopCountDown();\r\n  clearInterval(loop);\r\n  setIsDrawerOpen(false);\r\n  setProgressValue(0);\r\n  setIsVideoPlaying(false);\r\n  setEntry(undefined);\r\n  setStaff(undefined);\r\n  setStatus(-1);\r\n};\r\n\r\nexport const stopDetection = (setProgressValue) => {\r\n  setProgressValue(0);\r\n  clearInterval(loop);\r\n  return true;\r\n};\r\n\r\nexport const retake = (data) => {\r\n  clearInterval(loop);\r\n  clearVariable();\r\n  stopCountDown();\r\n  functions.isDrawerOpen(false);\r\n  functions.progressValue(0);\r\n  functions.staff(undefined);\r\n  if (data === \"normal\") {\r\n    functions.status(2);\r\n  }\r\n  setTimeout(() => {\r\n    if (data === \"normal\") {\r\n      functions.status(3);\r\n    }\r\n    const video = document.querySelector(\"video\");\r\n    // const canvas = document.querySelector(\"canvas\");\r\n    loop = Recognition(\r\n      video,\r\n      // canvas,\r\n      functions.isDrawerOpen,\r\n      functions.progressValue,\r\n      functions.staff,\r\n      functions.status\r\n    );\r\n  }, 2000);\r\n};\r\n","F:\\MyProjects\\spark\\src\\utilities\\Recognition.js",[],"F:\\MyProjects\\spark\\src\\utilities\\Timer.js",[],"F:\\MyProjects\\spark\\src\\utilities\\SaveEntry.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":30,"column":28,"nodeType":"73","messageId":"74","endLine":30,"endColumn":30},{"ruleId":"75","severity":1,"message":"76","line":48,"column":6,"nodeType":"77","endLine":48,"endColumn":8,"suggestions":"78"},{"ruleId":"79","severity":1,"message":"80","line":7,"column":7,"nodeType":"81","endLine":7,"endColumn":80},{"ruleId":"82","severity":1,"message":"83","line":33,"column":46,"nodeType":"84","messageId":"85","endLine":33,"endColumn":47},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'entry' and 'staff'. Either include them or remove the dependency array.","ArrayExpression",["88"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},"Update the dependencies array to be: [entry, staff]",{"range":"91","text":"92"},[1205,1207],"[entry, staff]"]