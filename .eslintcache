[{"F:\\MyProjects\\spark\\src\\App.js":"1","F:\\MyProjects\\spark\\src\\components\\Webcam.js":"2","F:\\MyProjects\\spark\\src\\index.js":"3","F:\\MyProjects\\spark\\src\\utilities\\Canvas.js":"4","F:\\MyProjects\\spark\\src\\components\\Home.js":"5","F:\\MyProjects\\spark\\src\\components\\Progress.js":"6","F:\\MyProjects\\spark\\src\\components\\Details.js":"7","F:\\MyProjects\\spark\\src\\config\\ApiConfig.js":"8","F:\\MyProjects\\spark\\src\\config\\ApiList.js":"9","F:\\MyProjects\\spark\\src\\components\\Header.js":"10","F:\\MyProjects\\spark\\src\\components\\Controls.js":"11","F:\\MyProjects\\spark\\src\\utilities\\VideoConfig.js":"12","F:\\MyProjects\\spark\\src\\utilities\\Recognition.js":"13"},{"size":150,"mtime":1612092564429,"results":"14","hashOfConfig":"15"},{"size":2391,"mtime":1612099481882,"results":"16","hashOfConfig":"15"},{"size":474,"mtime":1611997568046,"results":"17","hashOfConfig":"15"},{"size":269,"mtime":1610369941343,"results":"18","hashOfConfig":"15"},{"size":2383,"mtime":1612099783003,"results":"19","hashOfConfig":"15"},{"size":1311,"mtime":1611992679686,"results":"20","hashOfConfig":"15"},{"size":2366,"mtime":1612099493626,"results":"21","hashOfConfig":"15"},{"size":100,"mtime":1610393446793,"results":"22","hashOfConfig":"15"},{"size":808,"mtime":1610437299329,"results":"23","hashOfConfig":"15"},{"size":550,"mtime":1612001738669,"results":"24","hashOfConfig":"15"},{"size":2823,"mtime":1612018394407,"results":"25","hashOfConfig":"15"},{"size":1351,"mtime":1612018789947,"results":"26","hashOfConfig":"15"},{"size":3202,"mtime":1612090319356,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16w31cv",{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},"F:\\MyProjects\\spark\\src\\App.js",[],"F:\\MyProjects\\spark\\src\\components\\Webcam.js",["57","58"],"F:\\MyProjects\\spark\\src\\index.js",[],"F:\\MyProjects\\spark\\src\\utilities\\Canvas.js",[],["59","60"],"F:\\MyProjects\\spark\\src\\components\\Home.js",["61"],"import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\n// component Import\r\nimport Video from \"./Webcam\";\r\nimport Progress from \"./Progress\";\r\nimport Header from \"./Header\";\r\nimport Controls from \"./Controls\";\r\n\r\nimport apis from \"../config/ApiConfig\";\r\n\r\nconst Home = () => {\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n  const [staff, setStaff] = useState(undefined);\r\n  const [isVideoPLaying, setIsVideoPlaying] = useState(false);\r\n  const [progressValue, setProgressValue] = useState(0);\r\n  const [entry, setEntry] = useState(undefined);\r\n  const [status, setStatus] = useState(0);\r\n  const [staffNameList, setStaffNameList] = useState();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(apis.url + \"getName\")\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          var stafflist = [];\r\n\r\n          const list = res.data.staffName;\r\n          list.map((staff) => {\r\n            const obj = {};\r\n            obj[\"value\"] = staff;\r\n            stafflist.push(obj);\r\n          });\r\n          setStaffNameList(stafflist);\r\n        }\r\n      })\r\n      .catch((err) => console.error(err));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Row\r\n        gutter={[12, 12]}\r\n        style={style.container}\r\n        justify=\"center\"\r\n        align=\"middle\"\r\n      >\r\n        <Col sm={24} md={6}>\r\n          <Progress status={status} />\r\n        </Col>\r\n        <Col sm={24} md={12}>\r\n          <Video\r\n            entry={entry}\r\n            isVideoPLaying={isVideoPLaying}\r\n            progressValue={progressValue}\r\n            staff={staff}\r\n            isDrawerOpen={isDrawerOpen}\r\n            setIsDrawerOpen={setIsDrawerOpen}\r\n            staffNameList={staffNameList}\r\n          />\r\n        </Col>\r\n        <Col sm={24} md={6}>\r\n          <Controls\r\n            progressValue={progressValue}\r\n            setProgressValue={setProgressValue}\r\n            isVideoPlaying={isVideoPLaying}\r\n            setIsVideoPlaying={setIsVideoPlaying}\r\n            setIsDrawerOpen={setIsDrawerOpen}\r\n            setEntry={setEntry}\r\n            setStaff={setStaff}\r\n            setStatus={setStatus}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst style = {\r\n  container: {\r\n    width: \"100vw\",\r\n    height: \"90vh\",\r\n    padding: 20,\r\n  },\r\n};\r\n\r\nexport default Home;\r\n","F:\\MyProjects\\spark\\src\\components\\Progress.js",[],"F:\\MyProjects\\spark\\src\\components\\Details.js",["62","63","64","65","66","67"],"F:\\MyProjects\\spark\\src\\config\\ApiConfig.js",[],"F:\\MyProjects\\spark\\src\\config\\ApiList.js",[],"F:\\MyProjects\\spark\\src\\components\\Header.js",["68"],"F:\\MyProjects\\spark\\src\\components\\Controls.js",[],"F:\\MyProjects\\spark\\src\\utilities\\VideoConfig.js",["69"],"F:\\MyProjects\\spark\\src\\utilities\\Recognition.js",["70","71","72","73"],"import axios from \"axios\";\r\nimport * as faceapi from \"face-api.js\";\r\nimport { retake } from \"./VideoConfig\";\r\nimport { Modal, Image, Space, Button } from \"antd\";\r\n\r\nvar detectedFace = null;\r\n\r\nexport const clearVariable = () => {\r\n  detectedFace = null;\r\n};\r\n\r\nexport const Recognition = (\r\n  video,\r\n  canvas,\r\n  setIsDrawerOpen,\r\n  setProgressValue,\r\n  setStaff,\r\n  setStatus\r\n) => {\r\n  setStatus(1);\r\n  return setInterval(async () => {\r\n    let detection = await faceapi\r\n      .detectSingleFace(video)\r\n      .withFaceLandmarks()\r\n      .withFaceDescriptor();\r\n    if (detection) {\r\n      // var resizedDetections = faceapi.resizeResults(detection, {\r\n      //   width: video.width,\r\n      //   height: video.height,\r\n      // });\r\n      // faceapi.matchDimensions(canvas, {\r\n      //   width: video.width,\r\n      //   height: video.height,\r\n      // });\r\n\r\n      if (!detectedFace) {\r\n        setProgressValue(Math.round(detection.detection._score * 100));\r\n        if (detection.detection._score > 0.95) {\r\n          setProgressValue(100);\r\n          setStatus(2);\r\n          detectedFace = Array.from(detection.descriptor);\r\n          axios\r\n            .post(\"https://face-recognition-siet.herokuapp.com/face\", {\r\n              encode: detectedFace,\r\n            })\r\n            .then((res) => {\r\n              if (res.status === 200) {\r\n                setStaff(res.data);\r\n                // Modal.success({\r\n                //   centered: true,\r\n                //   width: 500,\r\n                //   icon: null,\r\n                //   centered: true,\r\n                //   content: <Details data={res.data} />,\r\n                // });\r\n                setIsDrawerOpen(true);\r\n              }\r\n            })\r\n            .then(() => retake(setProgressValue, setStatus));\r\n        }\r\n\r\n        // canvas.getContext(\"2d\").clearRect(0, 0, video.width, video.height);\r\n        // const detectionFrame = new faceapi.draw.DrawBox(\r\n        //   resizedDetections.detection.box,\r\n        //   {\r\n        //     boxColor: \"blue\",\r\n        //   }\r\n        // );\r\n        // detectionFrame.draw(canvas);\r\n      }\r\n      // else {\r\n      //   canvas.getContext(\"2d\").clearRect(0, 0, canvas.width, canvas.height);\r\n      //   const labeledFrame = new faceapi.draw.DrawBox(\r\n      //     resizedDetections.detection.box,\r\n      //     {\r\n      //       boxColor: \"green\",\r\n      //       label: staffName,\r\n      //       drawLabelOptions: {\r\n      //         padding: 5,\r\n      //       },\r\n      //     }\r\n      //   );\r\n      //   labeledFrame.draw(canvas);\r\n      // }\r\n    } else {\r\n      setProgressValue(0);\r\n    }\r\n  }, 1000);\r\n};\r\n\r\n// const Details = ({ data }) => {\r\n//   return (\r\n//     <div\r\n//       style={{\r\n//         width: \"100%\",\r\n//         display: \"flex\",\r\n//         justifyContent: \"space-around\",\r\n//         alignItems: \"center\",\r\n//       }}\r\n//     >\r\n//       <Image width={80} height=\"auto\" src={data.img} />\r\n//       <div>\r\n//         <h1>{data.Name}</h1>\r\n//         <Space>\r\n//           <h2>Not You?</h2>\r\n//           <Button type=\"primary\" danger>\r\n//             Retake\r\n//           </Button>\r\n//         </Space>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n",{"ruleId":"74","severity":1,"message":"75","line":2,"column":8,"nodeType":"76","messageId":"77","endLine":2,"endColumn":14},{"ruleId":"74","severity":1,"message":"78","line":4,"column":42,"nodeType":"76","messageId":"77","endLine":4,"endColumn":48},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":30,"column":28,"nodeType":"85","messageId":"86","endLine":30,"endColumn":30},{"ruleId":"74","severity":1,"message":"87","line":3,"column":3,"nodeType":"76","messageId":"77","endLine":3,"endColumn":6},{"ruleId":"74","severity":1,"message":"88","line":4,"column":3,"nodeType":"76","messageId":"77","endLine":4,"endColumn":6},{"ruleId":"74","severity":1,"message":"89","line":7,"column":3,"nodeType":"76","messageId":"77","endLine":7,"endColumn":11},{"ruleId":"74","severity":1,"message":"90","line":10,"column":3,"nodeType":"76","messageId":"77","endLine":10,"endColumn":8},{"ruleId":"74","severity":1,"message":"91","line":16,"column":17,"nodeType":"76","messageId":"77","endLine":16,"endColumn":25},{"ruleId":"74","severity":1,"message":"92","line":17,"column":10,"nodeType":"76","messageId":"77","endLine":17,"endColumn":25},{"ruleId":"93","severity":1,"message":"94","line":7,"column":7,"nodeType":"95","endLine":7,"endColumn":80},{"ruleId":"96","severity":1,"message":"97","line":21,"column":46,"nodeType":"98","messageId":"99","endLine":21,"endColumn":47},{"ruleId":"74","severity":1,"message":"100","line":4,"column":10,"nodeType":"76","messageId":"77","endLine":4,"endColumn":15},{"ruleId":"74","severity":1,"message":"101","line":4,"column":17,"nodeType":"76","messageId":"77","endLine":4,"endColumn":22},{"ruleId":"74","severity":1,"message":"90","line":4,"column":24,"nodeType":"76","messageId":"77","endLine":4,"endColumn":29},{"ruleId":"74","severity":1,"message":"102","line":4,"column":31,"nodeType":"76","messageId":"77","endLine":4,"endColumn":37},"no-unused-vars","'Canvas' is defined but never used.","Identifier","unusedVar","'Drawer' is defined but never used.","no-native-reassign",["103"],"no-negated-in-lhs",["104"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Row' is defined but never used.","'Col' is defined but never used.","'Timeline' is defined but never used.","'Space' is defined but never used.","'setCount' is assigned a value but never used.","'selectStaffName' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'Modal' is defined but never used.","'Image' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]