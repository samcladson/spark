[{"F:\\MyProjects\\spark\\src\\App.js":"1","F:\\MyProjects\\spark\\src\\components\\Webcam.js":"2","F:\\MyProjects\\spark\\src\\index.js":"3","F:\\MyProjects\\spark\\src\\utilities\\Canvas.js":"4","F:\\MyProjects\\spark\\src\\components\\Home.js":"5","F:\\MyProjects\\spark\\src\\components\\Progress.js":"6","F:\\MyProjects\\spark\\src\\components\\Details.js":"7","F:\\MyProjects\\spark\\src\\config\\ApiConfig.js":"8","F:\\MyProjects\\spark\\src\\config\\ApiList.js":"9","F:\\MyProjects\\spark\\src\\utilities\\SaveTimer.js":"10","F:\\MyProjects\\spark\\src\\components\\Header.js":"11","F:\\MyProjects\\spark\\src\\components\\Controls.js":"12","F:\\MyProjects\\spark\\src\\utilities\\VideoConfig.js":"13","F:\\MyProjects\\spark\\src\\utilities\\Recognition.js":"14"},{"size":170,"mtime":1610361948250,"results":"15","hashOfConfig":"16"},{"size":2024,"mtime":1612001064104,"results":"17","hashOfConfig":"16"},{"size":474,"mtime":1611997568046,"results":"18","hashOfConfig":"16"},{"size":269,"mtime":1610369941343,"results":"19","hashOfConfig":"16"},{"size":1795,"mtime":1611992588633,"results":"20","hashOfConfig":"16"},{"size":1311,"mtime":1611992679686,"results":"21","hashOfConfig":"16"},{"size":2737,"mtime":1611935712158,"results":"22","hashOfConfig":"16"},{"size":100,"mtime":1610393446793,"results":"23","hashOfConfig":"16"},{"size":808,"mtime":1610437299329,"results":"24","hashOfConfig":"16"},{"size":788,"mtime":1611759235937,"results":"25","hashOfConfig":"16"},{"size":559,"mtime":1611952057411,"results":"26","hashOfConfig":"16"},{"size":2723,"mtime":1611991142234,"results":"27","hashOfConfig":"16"},{"size":1351,"mtime":1611993084070,"results":"28","hashOfConfig":"16"},{"size":2364,"mtime":1611997636882,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16w31cv",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\MyProjects\\spark\\src\\App.js",[],"F:\\MyProjects\\spark\\src\\components\\Webcam.js",[],"F:\\MyProjects\\spark\\src\\index.js",[],"F:\\MyProjects\\spark\\src\\utilities\\Canvas.js",[],["61","62"],"F:\\MyProjects\\spark\\src\\components\\Home.js",[],"F:\\MyProjects\\spark\\src\\components\\Progress.js",[],"F:\\MyProjects\\spark\\src\\components\\Details.js",["63","64","65","66"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Drawer,\r\n  Image,\r\n  Timeline,\r\n  Divider,\r\n  Button,\r\n  Space,\r\n  AutoComplete,\r\n} from \"antd\";\r\n\r\nimport axios from \"axios\";\r\nimport apis from \"../config/ApiConfig\";\r\nimport Timer from \"../utilities/SaveTimer\";\r\n\r\nconst Details = ({ isDrawerOpen, setIsDrawerOpen, staff }) => {\r\n  const [staffNameList, setStaffNameList] = useState();\r\n  const [options, setOptions] = useState();\r\n  const [selectStaffName, setSelectStaffName] = useState();\r\n\r\n  const searchOption = (value) => {\r\n    var opt = staffNameList.filter((staff) =>\r\n      staff[\"value\"].toLowerCase().includes(value)\r\n    );\r\n    setOptions(opt);\r\n  };\r\n\r\n  const handleInput = (value) => {\r\n    setSelectStaffName(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(apis.url + \"getName\")\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          var stafflist = [];\r\n\r\n          const list = res.data.staffName;\r\n          list.map((staff) => {\r\n            const obj = {};\r\n            obj[\"value\"] = staff;\r\n            stafflist.push(obj);\r\n          });\r\n          setStaffNameList(stafflist);\r\n        }\r\n      })\r\n      .catch((err) => console.error(err));\r\n  }, []);\r\n\r\n  return staff ? (\r\n    <Drawer\r\n      width={650}\r\n      placement=\"right\"\r\n      closable={true}\r\n      onClose={() => setIsDrawerOpen(false)}\r\n      visible={isDrawerOpen}\r\n    >\r\n      <Row>\r\n        <Col span={12}>\r\n          <Image width={120} height=\"auto\" src={staff.img} />\r\n        </Col>\r\n        <Col span={12}>\r\n          <h1>{staff.Name}</h1>\r\n          <h3>Computer Science And Engineering</h3>\r\n          <div style={style.retake}>\r\n            <h2 style={{ marginTop: 10, marginRight: 10 }}>Not You?</h2>\r\n            <Button type=\"primary\" size=\"large\" danger>\r\n              Retake\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Divider />\r\n      <Row style={style.timerContainer}>\r\n        <Col span={12}>\r\n          <h2>Attendance will be marked in..</h2>\r\n        </Col>\r\n        <Col span={12}>\r\n          <Timer\r\n            isDrawerOpen={isDrawerOpen}\r\n            setIsDrawerOpen={setIsDrawerOpen}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Divider />\r\n      <Row>\r\n        <AutoComplete\r\n          style={{ width: \"100%\" }}\r\n          placeholder=\"Enter your name..\"\r\n          onSearch={searchOption}\r\n          onSelect={handleInput}\r\n          options={options}\r\n        />\r\n      </Row>\r\n    </Drawer>\r\n  ) : null;\r\n};\r\n\r\nconst style = {\r\n  retake: {\r\n    display: \"flex\",\r\n    justifyContent: \"start\",\r\n    alignItems: \"center\",\r\n  },\r\n  timerContainer: {\r\n    alignItems: \"center\",\r\n  },\r\n};\r\n\r\nexport default Details;\r\n","F:\\MyProjects\\spark\\src\\config\\ApiConfig.js",[],"F:\\MyProjects\\spark\\src\\config\\ApiList.js",[],"F:\\MyProjects\\spark\\src\\utilities\\SaveTimer.js",["67","68","69","70"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, Progress, Space } from \"antd\";\r\n\r\nconst Timer = ({ isDrawerOpen, setIsDrawerOpen }) => {\r\n  const [timer, setTimer] = useState(0);\r\n\r\n  // useEffect(() => {\r\n  //   if (isDrawerOpen) saveTimer(timer);\r\n  // }, [isDrawerOpen]);\r\n\r\n  const saveTimer = (timing) => {\r\n    setTimeout(async () => {\r\n      setIsDrawerOpen(false);\r\n      clearInterval(savetimer);\r\n      setTimer(0);\r\n    }, 5500);\r\n\r\n    const savetimer = setInterval(() => {\r\n      timing += 20;\r\n      setTimer(timing);\r\n    }, 1000);\r\n  };\r\n  return (\r\n    <div>\r\n      <Progress percent={timer} type=\"circle\" size=\"small\" />\r\n\r\n      {/* <Button onClick={() => saveTimer(timer)}>Start timer</Button> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","F:\\MyProjects\\spark\\src\\components\\Header.js",["71"],"F:\\MyProjects\\spark\\src\\components\\Controls.js",[],"F:\\MyProjects\\spark\\src\\utilities\\VideoConfig.js",["72"],"F:\\MyProjects\\spark\\src\\utilities\\Recognition.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":7,"column":3,"nodeType":"79","messageId":"80","endLine":7,"endColumn":11},{"ruleId":"77","severity":1,"message":"81","line":10,"column":3,"nodeType":"79","messageId":"80","endLine":10,"endColumn":8},{"ruleId":"77","severity":1,"message":"82","line":21,"column":10,"nodeType":"79","messageId":"80","endLine":21,"endColumn":25},{"ruleId":"83","severity":1,"message":"84","line":42,"column":28,"nodeType":"85","messageId":"86","endLine":42,"endColumn":30},{"ruleId":"77","severity":1,"message":"87","line":1,"column":27,"nodeType":"79","messageId":"80","endLine":1,"endColumn":36},{"ruleId":"77","severity":1,"message":"88","line":2,"column":10,"nodeType":"79","messageId":"80","endLine":2,"endColumn":16},{"ruleId":"77","severity":1,"message":"81","line":2,"column":28,"nodeType":"79","messageId":"80","endLine":2,"endColumn":33},{"ruleId":"77","severity":1,"message":"89","line":11,"column":9,"nodeType":"79","messageId":"80","endLine":11,"endColumn":18},{"ruleId":"90","severity":1,"message":"91","line":7,"column":7,"nodeType":"92","endLine":7,"endColumn":80},{"ruleId":"93","severity":1,"message":"94","line":21,"column":46,"nodeType":"95","messageId":"96","endLine":21,"endColumn":47},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'Timeline' is defined but never used.","Identifier","unusedVar","'Space' is defined but never used.","'selectStaffName' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useEffect' is defined but never used.","'Button' is defined but never used.","'saveTimer' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]